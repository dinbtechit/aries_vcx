// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.67.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'issuer_credential_generated.io.dart'
    if (dart.library.html) 'issuer_credential_generated.web.dart';

abstract class IssuerCredential {
  Future<int> issuerCredentialDeserialize(
      {required String credentialData, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialDeserializeConstMeta;

  Future<String> issuerCredentialSerialize(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSerializeConstMeta;

  Future<int> issuerCredentialUpdateStateV2(
      {required int handleCredential,
      required int connectionHandle,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialUpdateStateV2ConstMeta;

  Future<int> issuerCredentialUpdateStateWithMessageV2(
      {required int handleCredential,
      required int connectionHandle,
      required String message,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta
      get kIssuerCredentialUpdateStateWithMessageV2ConstMeta;

  Future<int> issuerCredentialGetState(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetStateConstMeta;

  Future<String> issuerCredentialGetRevRegId(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetRevRegIdConstMeta;

  Future<int> issuerCredentialCreate({required String sourceId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialCreateConstMeta;

  Future<void> issuerCredentialRevokeLocal(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialRevokeLocalConstMeta;

  Future<bool> issuerCredentialIsRevokable(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialIsRevokableConstMeta;

  Future<int> issuerCredentialSendCredential(
      {required int handleCredential,
      required int handleConnection,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSendCredentialConstMeta;

  Future<void> issuerCredentialSendOfferV2(
      {required int handleCredential,
      required int handleConnection,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSendOfferV2ConstMeta;

  Future<void> issuerCredentialMarkOfferMsgSent(
      {required int handleCredential, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialMarkOfferMsgSentConstMeta;

  Future<void> issuerCredentialBuildOfferMsgV2(
      {required int credentialHandle,
      required int credDefHandle,
      required int revRegHandle,
      required String credentialJson,
      String? comment,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialBuildOfferMsgV2ConstMeta;

  Future<String> issuerCredentialGetOfferMsg(
      {required int credentialHandle, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetOfferMsgConstMeta;

  Future<void> issuerCredentialRelease(
      {required int credentialHandle, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialReleaseConstMeta;

  Future<String> issuerCredentialGetThreadId(
      {required int credentialHandle, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetThreadIdConstMeta;
}

class IssuerCredentialImpl implements IssuerCredential {
  final IssuerCredentialPlatform _platform;
  factory IssuerCredentialImpl(ExternalLibrary dylib) =>
      IssuerCredentialImpl.raw(IssuerCredentialPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory IssuerCredentialImpl.wasm(FutureOr<WasmModule> module) =>
      IssuerCredentialImpl(module as ExternalLibrary);
  IssuerCredentialImpl.raw(this._platform);
  Future<int> issuerCredentialDeserialize(
      {required String credentialData, dynamic hint}) {
    var arg0 = _platform.api2wire_String(credentialData);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_deserialize(port_, arg0),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialDeserializeConstMeta,
      argValues: [credentialData],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialDeserializeConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_deserialize",
        argNames: ["credentialData"],
      );

  Future<String> issuerCredentialSerialize(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_serialize(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kIssuerCredentialSerializeConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSerializeConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_serialize",
        argNames: ["handleCredential"],
      );

  Future<int> issuerCredentialUpdateStateV2(
      {required int handleCredential,
      required int connectionHandle,
      dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    var arg1 = api2wire_u32(connectionHandle);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_update_state_v2(port_, arg0, arg1),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialUpdateStateV2ConstMeta,
      argValues: [handleCredential, connectionHandle],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialUpdateStateV2ConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_update_state_v2",
        argNames: ["handleCredential", "connectionHandle"],
      );

  Future<int> issuerCredentialUpdateStateWithMessageV2(
      {required int handleCredential,
      required int connectionHandle,
      required String message,
      dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    var arg1 = api2wire_u32(connectionHandle);
    var arg2 = _platform.api2wire_String(message);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_update_state_with_message_v2(
              port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialUpdateStateWithMessageV2ConstMeta,
      argValues: [handleCredential, connectionHandle, message],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kIssuerCredentialUpdateStateWithMessageV2ConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "issuer_credential_update_state_with_message_v2",
            argNames: ["handleCredential", "connectionHandle", "message"],
          );

  Future<int> issuerCredentialGetState(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_get_state(port_, arg0),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialGetStateConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetStateConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_get_state",
        argNames: ["handleCredential"],
      );

  Future<String> issuerCredentialGetRevRegId(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_get_rev_reg_id(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kIssuerCredentialGetRevRegIdConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetRevRegIdConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_get_rev_reg_id",
        argNames: ["handleCredential"],
      );

  Future<int> issuerCredentialCreate({required String sourceId, dynamic hint}) {
    var arg0 = _platform.api2wire_String(sourceId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_create(port_, arg0),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialCreateConstMeta,
      argValues: [sourceId],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialCreateConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_create",
        argNames: ["sourceId"],
      );

  Future<void> issuerCredentialRevokeLocal(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_revoke_local(port_, arg0),
      parseSuccessData: _wire2api_unit,
      constMeta: kIssuerCredentialRevokeLocalConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialRevokeLocalConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_revoke_local",
        argNames: ["handleCredential"],
      );

  Future<bool> issuerCredentialIsRevokable(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_is_revokable(port_, arg0),
      parseSuccessData: _wire2api_bool,
      constMeta: kIssuerCredentialIsRevokableConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialIsRevokableConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_is_revokable",
        argNames: ["handleCredential"],
      );

  Future<int> issuerCredentialSendCredential(
      {required int handleCredential,
      required int handleConnection,
      dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    var arg1 = api2wire_u32(handleConnection);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_send_credential(port_, arg0, arg1),
      parseSuccessData: _wire2api_u32,
      constMeta: kIssuerCredentialSendCredentialConstMeta,
      argValues: [handleCredential, handleConnection],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSendCredentialConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_send_credential",
        argNames: ["handleCredential", "handleConnection"],
      );

  Future<void> issuerCredentialSendOfferV2(
      {required int handleCredential,
      required int handleConnection,
      dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    var arg1 = api2wire_u32(handleConnection);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_send_offer_v2(port_, arg0, arg1),
      parseSuccessData: _wire2api_unit,
      constMeta: kIssuerCredentialSendOfferV2ConstMeta,
      argValues: [handleCredential, handleConnection],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialSendOfferV2ConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_send_offer_v2",
        argNames: ["handleCredential", "handleConnection"],
      );

  Future<void> issuerCredentialMarkOfferMsgSent(
      {required int handleCredential, dynamic hint}) {
    var arg0 = api2wire_u32(handleCredential);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_mark_offer_msg_sent(port_, arg0),
      parseSuccessData: _wire2api_unit,
      constMeta: kIssuerCredentialMarkOfferMsgSentConstMeta,
      argValues: [handleCredential],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kIssuerCredentialMarkOfferMsgSentConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "issuer_credential_mark_offer_msg_sent",
            argNames: ["handleCredential"],
          );

  Future<void> issuerCredentialBuildOfferMsgV2(
      {required int credentialHandle,
      required int credDefHandle,
      required int revRegHandle,
      required String credentialJson,
      String? comment,
      dynamic hint}) {
    var arg0 = api2wire_u32(credentialHandle);
    var arg1 = api2wire_u32(credDefHandle);
    var arg2 = api2wire_u32(revRegHandle);
    var arg3 = _platform.api2wire_String(credentialJson);
    var arg4 = _platform.api2wire_opt_String(comment);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner
          .wire_issuer_credential_build_offer_msg_v2(
              port_, arg0, arg1, arg2, arg3, arg4),
      parseSuccessData: _wire2api_unit,
      constMeta: kIssuerCredentialBuildOfferMsgV2ConstMeta,
      argValues: [
        credentialHandle,
        credDefHandle,
        revRegHandle,
        credentialJson,
        comment
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta
      get kIssuerCredentialBuildOfferMsgV2ConstMeta =>
          const FlutterRustBridgeTaskConstMeta(
            debugName: "issuer_credential_build_offer_msg_v2",
            argNames: [
              "credentialHandle",
              "credDefHandle",
              "revRegHandle",
              "credentialJson",
              "comment"
            ],
          );

  Future<String> issuerCredentialGetOfferMsg(
      {required int credentialHandle, dynamic hint}) {
    var arg0 = api2wire_u32(credentialHandle);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_get_offer_msg(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kIssuerCredentialGetOfferMsgConstMeta,
      argValues: [credentialHandle],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetOfferMsgConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_get_offer_msg",
        argNames: ["credentialHandle"],
      );

  Future<void> issuerCredentialRelease(
      {required int credentialHandle, dynamic hint}) {
    var arg0 = api2wire_u32(credentialHandle);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_release(port_, arg0),
      parseSuccessData: _wire2api_unit,
      constMeta: kIssuerCredentialReleaseConstMeta,
      argValues: [credentialHandle],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialReleaseConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_release",
        argNames: ["credentialHandle"],
      );

  Future<String> issuerCredentialGetThreadId(
      {required int credentialHandle, dynamic hint}) {
    var arg0 = api2wire_u32(credentialHandle);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_issuer_credential_get_thread_id(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kIssuerCredentialGetThreadIdConstMeta,
      argValues: [credentialHandle],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kIssuerCredentialGetThreadIdConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "issuer_credential_get_thread_id",
        argNames: ["credentialHandle"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  bool _wire2api_bool(dynamic raw) {
    return raw as bool;
  }

  int _wire2api_u32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_u32(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
