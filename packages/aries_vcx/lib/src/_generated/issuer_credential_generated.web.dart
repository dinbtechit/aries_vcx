// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.67.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'issuer_credential_generated.dart';
export 'issuer_credential_generated.dart';

class IssuerCredentialPlatform
    extends FlutterRustBridgeBase<IssuerCredentialWire>
    with FlutterRustBridgeSetupMixin {
  IssuerCredentialPlatform(FutureOr<WasmModule> dylib)
      : super(IssuerCredentialWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  String? api2wire_opt_String(String? raw) {
    return raw == null ? null : api2wire_String(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external IssuerCredentialWasmModule get wasmModule;

@JS()
@anonymous
class IssuerCredentialWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external IssuerCredentialWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_issuer_credential_deserialize(
      NativePortType port_, String credential_data);

  external dynamic /* void */ wire_issuer_credential_serialize(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_update_state_v2(
      NativePortType port_, int handle_credential, int connection_handle);

  external dynamic /* void */
      wire_issuer_credential_update_state_with_message_v2(NativePortType port_,
          int handle_credential, int connection_handle, String message);

  external dynamic /* void */ wire_issuer_credential_get_state(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_get_rev_reg_id(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_create(
      NativePortType port_, String source_id);

  external dynamic /* void */ wire_issuer_credential_revoke_local(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_is_revokable(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_send_credential(
      NativePortType port_, int handle_credential, int handle_connection);

  external dynamic /* void */ wire_issuer_credential_send_offer_v2(
      NativePortType port_, int handle_credential, int handle_connection);

  external dynamic /* void */ wire_issuer_credential_mark_offer_msg_sent(
      NativePortType port_, int handle_credential);

  external dynamic /* void */ wire_issuer_credential_build_offer_msg_v2(
      NativePortType port_,
      int credential_handle,
      int cred_def_handle,
      int rev_reg_handle,
      String credential_json,
      String? comment);

  external dynamic /* void */ wire_issuer_credential_get_offer_msg(
      NativePortType port_, int credential_handle);

  external dynamic /* void */ wire_issuer_credential_release(
      NativePortType port_, int credential_handle);

  external dynamic /* void */ wire_issuer_credential_get_thread_id(
      NativePortType port_, int credential_handle);
}

// Section: WASM wire connector

class IssuerCredentialWire
    extends FlutterRustBridgeWasmWireBase<IssuerCredentialWasmModule> {
  IssuerCredentialWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<IssuerCredentialWasmModule>(module));

  void wire_issuer_credential_deserialize(
          NativePortType port_, String credential_data) =>
      wasmModule.wire_issuer_credential_deserialize(port_, credential_data);

  void wire_issuer_credential_serialize(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_serialize(port_, handle_credential);

  void wire_issuer_credential_update_state_v2(
          NativePortType port_, int handle_credential, int connection_handle) =>
      wasmModule.wire_issuer_credential_update_state_v2(
          port_, handle_credential, connection_handle);

  void wire_issuer_credential_update_state_with_message_v2(NativePortType port_,
          int handle_credential, int connection_handle, String message) =>
      wasmModule.wire_issuer_credential_update_state_with_message_v2(
          port_, handle_credential, connection_handle, message);

  void wire_issuer_credential_get_state(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_get_state(port_, handle_credential);

  void wire_issuer_credential_get_rev_reg_id(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_get_rev_reg_id(
          port_, handle_credential);

  void wire_issuer_credential_create(NativePortType port_, String source_id) =>
      wasmModule.wire_issuer_credential_create(port_, source_id);

  void wire_issuer_credential_revoke_local(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_revoke_local(port_, handle_credential);

  void wire_issuer_credential_is_revokable(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_is_revokable(port_, handle_credential);

  void wire_issuer_credential_send_credential(
          NativePortType port_, int handle_credential, int handle_connection) =>
      wasmModule.wire_issuer_credential_send_credential(
          port_, handle_credential, handle_connection);

  void wire_issuer_credential_send_offer_v2(
          NativePortType port_, int handle_credential, int handle_connection) =>
      wasmModule.wire_issuer_credential_send_offer_v2(
          port_, handle_credential, handle_connection);

  void wire_issuer_credential_mark_offer_msg_sent(
          NativePortType port_, int handle_credential) =>
      wasmModule.wire_issuer_credential_mark_offer_msg_sent(
          port_, handle_credential);

  void wire_issuer_credential_build_offer_msg_v2(
          NativePortType port_,
          int credential_handle,
          int cred_def_handle,
          int rev_reg_handle,
          String credential_json,
          String? comment) =>
      wasmModule.wire_issuer_credential_build_offer_msg_v2(
          port_,
          credential_handle,
          cred_def_handle,
          rev_reg_handle,
          credential_json,
          comment);

  void wire_issuer_credential_get_offer_msg(
          NativePortType port_, int credential_handle) =>
      wasmModule.wire_issuer_credential_get_offer_msg(port_, credential_handle);

  void wire_issuer_credential_release(
          NativePortType port_, int credential_handle) =>
      wasmModule.wire_issuer_credential_release(port_, credential_handle);

  void wire_issuer_credential_get_thread_id(
          NativePortType port_, int credential_handle) =>
      wasmModule.wire_issuer_credential_get_thread_id(port_, credential_handle);
}
