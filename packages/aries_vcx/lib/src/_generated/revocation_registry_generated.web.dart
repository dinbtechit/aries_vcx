// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.67.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'revocation_registry_generated.dart';
export 'revocation_registry_generated.dart';

class RevocationRegistryPlatform
    extends FlutterRustBridgeBase<RevocationRegistryWire>
    with FlutterRustBridgeSetupMixin {
  RevocationRegistryPlatform(FutureOr<WasmModule> dylib)
      : super(RevocationRegistryWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_box_autoadd_revocation_registry_config(
      RevocationRegistryConfig raw) {
    return api2wire_revocation_registry_config(raw);
  }

  @protected
  List<dynamic> api2wire_revocation_registry_config(
      RevocationRegistryConfig raw) {
    return [
      api2wire_String(raw.issuerDid),
      api2wire_String(raw.credDefId),
      api2wire_u32(raw.tag),
      api2wire_String(raw.tailsDir),
      api2wire_u32(raw.maxCreds)
    ];
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external RevocationRegistryWasmModule get wasmModule;

@JS()
@anonymous
class RevocationRegistryWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external RevocationRegistryWasmModule bind(
      dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_revocation_registry_create(
      NativePortType port_, List<dynamic> config);

  external dynamic /* void */ wire_revocation_registry_publish(
      NativePortType port_, int handle, String tails_url);

  external dynamic /* void */ wire_revocation_registry_publish_revocations(
      NativePortType port_, int handle);

  external dynamic /* void */ wire_revocation_registry_get_rev_reg_id(
      NativePortType port_, int handle);

  external dynamic /* void */ wire_revocation_registry_get_tails_hash(
      NativePortType port_, int handle);

  external dynamic /* void */ wire_revocation_registry_serialize(
      NativePortType port_, int handle);

  external dynamic /* void */ wire_revocation_registry_deserialize(
      NativePortType port_, String data);

  external dynamic /* void */ wire_revocation_registry_release(
      NativePortType port_, int handle);
}

// Section: WASM wire connector

class RevocationRegistryWire
    extends FlutterRustBridgeWasmWireBase<RevocationRegistryWasmModule> {
  RevocationRegistryWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<RevocationRegistryWasmModule>(module));

  void wire_revocation_registry_create(
          NativePortType port_, List<dynamic> config) =>
      wasmModule.wire_revocation_registry_create(port_, config);

  void wire_revocation_registry_publish(
          NativePortType port_, int handle, String tails_url) =>
      wasmModule.wire_revocation_registry_publish(port_, handle, tails_url);

  void wire_revocation_registry_publish_revocations(
          NativePortType port_, int handle) =>
      wasmModule.wire_revocation_registry_publish_revocations(port_, handle);

  void wire_revocation_registry_get_rev_reg_id(
          NativePortType port_, int handle) =>
      wasmModule.wire_revocation_registry_get_rev_reg_id(port_, handle);

  void wire_revocation_registry_get_tails_hash(
          NativePortType port_, int handle) =>
      wasmModule.wire_revocation_registry_get_tails_hash(port_, handle);

  void wire_revocation_registry_serialize(NativePortType port_, int handle) =>
      wasmModule.wire_revocation_registry_serialize(port_, handle);

  void wire_revocation_registry_deserialize(
          NativePortType port_, String data) =>
      wasmModule.wire_revocation_registry_deserialize(port_, data);

  void wire_revocation_registry_release(NativePortType port_, int handle) =>
      wasmModule.wire_revocation_registry_release(port_, handle);
}
