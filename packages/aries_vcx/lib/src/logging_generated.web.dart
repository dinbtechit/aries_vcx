// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.61.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'logging_generated.dart';
export 'logging_generated.dart';

class LoggingPlatform extends FlutterRustBridgeBase<LoggingWire>
    with FlutterRustBridgeSetupMixin {
  LoggingPlatform(FutureOr<WasmModule> dylib) : super(LoggingWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  String? api2wire_opt_String(String? raw) {
    return raw == null ? null : api2wire_String(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external LoggingWasmModule get wasmModule;

@JS()
@anonymous
class LoggingWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external LoggingWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_init_default_logger(
      NativePortType port_, String? pattern);
}

// Section: WASM wire connector

class LoggingWire extends FlutterRustBridgeWasmWireBase<LoggingWasmModule> {
  LoggingWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<LoggingWasmModule>(module));

  void wire_init_default_logger(NativePortType port_, String? pattern) =>
      wasmModule.wire_init_default_logger(port_, pattern);
}
